{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cosmos\\\\Desktop\\\\test.perceptionbox\\\\PerceptionBox\\\\src\\\\components\\\\search-box\\\\search-box.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, Component, Fragment } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComboBox() {\n  _s();\n\n  const [searchedMonsters, setSearchedMonsters] = useState({});\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character`).then(res => res.json()).then(users => setSearchedMonsters(users.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    cla: true,\n    disablePortal: true,\n    id: \"combo-box-demo\",\n    options: searchedMonsters,\n    getOptionLabel: option => option.name,\n    sx: {\n      width: 300\n    },\n    onChange: (e, obj) => {\n      console.log(obj);\n    },\n    renderOption: (e, obj) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: `/character/${obj.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: obj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 40\n      }, this);\n    },\n    renderInput: (params, obj) => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Search character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComboBox, \"QzFdoKvqGQJDyAjxADeFjmwP2YU=\");\n\n_c = ComboBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComboBox\");","map":{"version":3,"sources":["C:/Users/Cosmos/Desktop/test.perceptionbox/PerceptionBox/src/components/search-box/search-box.component.jsx"],"names":["React","Component","Fragment","TextField","Autocomplete","useState","useEffect","Link","ComboBox","searchedMonsters","setSearchedMonsters","fetch","then","res","json","users","results","option","name","width","e","obj","console","log","id","params"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAAE,2CAAF,CAAL,CACEC,IADF,CACOC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADZ,EAEEF,IAFF,CAEOG,KAAK,IAAEL,mBAAmB,CAACK,KAAK,CAACC,OAAP,CAFjC;AAGD,GAJQ,EAIP,EAJO,CAAT;AAMF,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,MADL;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,OAAO,EAAEP,gBAJX;AAKE,IAAA,cAAc,EAAIQ,MAAD,IAAaA,MAAM,CAACC,IALvC;AAME,IAAA,EAAE,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANN;AAOE,IAAA,QAAQ,EAAG,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAP5C;AAQE,IAAA,YAAY,EAAE,CAACD,CAAD,EAAIC,GAAJ,KAAW;AAAC,0BAAO,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAG,cAAaA,GAAG,CAACG,EAAG,EAAhD;AAAA,+BAAmD;AAAA,oBAAKH,GAAG,CAACH;AAAT;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,cAAP;AAAsF,KARlH;AASE,IAAA,WAAW,EAAE,CAACO,MAAD,EAASJ,GAAT,kBAAiB,QAAC,SAAD,OAAeI,MAAf;AAAuB,MAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAThC;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBuBjB,Q;;KAAAA,Q","sourcesContent":["import {React, Component, Fragment} from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ComboBox() {\r\n\r\n    const [searchedMonsters, setSearchedMonsters] = useState({});\r\n\r\n    useEffect(()=>{\r\n      fetch(`https://rickandmortyapi.com/api/character`)\r\n       .then(res=>res.json())\r\n       .then(users=>setSearchedMonsters(users.results))\r\n    },[])\r\n\r\n  return (\r\n    <Autocomplete\r\n      cla\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={searchedMonsters}\r\n      getOptionLabel={ (option) =>  option.name}\r\n      sx={{ width: 300 }}\r\n      onChange={ (e, obj) => { console.log(obj)} }\r\n      renderOption={(e, obj) =>{return <Link className=\"link\" to={`/character/${obj.id}`}><li>{obj.name}</li></Link> }}\r\n      renderInput={(params, obj) => <TextField {...params} label=\"Search character\" />}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}