{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cosmos\\\\Desktop\\\\test.perceptionbox\\\\PerceptionBox\\\\src\\\\components\\\\character\\\\character.component.jsx\",\n    _s = $RefreshSig$();\n\nimport './character.styles.scss';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  let params = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    const getCharacter = async () => {\n      const data = await fetch(`https://rickandmortyapi.com/api/character/${params.id}`);\n      const characterData = await data.json();\n      setCharacter(characterData);\n    };\n\n    getCharacter();\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: character.image,\n      alt: \"monster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Name: \", character.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Species: \", character.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", character.location && character.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Episodes: \", character.episode && character.episode.map(num => {\n          return num.replace('https://rickandmortyapi.com/api/episode/', '');\n        }).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", character.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date of creation: \", Date(character.created)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Like/dislike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Character, \"ralI/zMDqAovpeHzNWc9gH7kUvw=\", false, function () {\n  return [useParams];\n});\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["C:/Users/Cosmos/Desktop/test.perceptionbox/PerceptionBox/src/components/character/character.component.jsx"],"names":["useParams","useState","useEffect","Character","params","character","setCharacter","getCharacter","data","fetch","id","characterData","json","image","name","species","gender","location","episode","map","num","replace","join","status","Date","created"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,MAAIC,MAAM,GAAGJ,SAAS,EAAtB;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMK,YAAY,GAAG,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,6CAA4CL,MAAM,CAACM,EAAG,EAAxD,CAAxB;AACA,YAAMC,aAAa,GAAG,MAAMH,IAAI,CAACI,IAAL,EAA5B;AACAN,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACH,KAJD;;AAKAJ,IAAAA,YAAY;AACf,GAPQ,EAOP,CAACH,MAAD,CAPO,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEC,SAAS,CAACQ,KAApB;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,6BAAWR,SAAS,CAACS,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAaT,SAAS,CAACU,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAYV,SAAS,CAACW,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,iCAAcX,SAAS,CAACY,QAAV,IAAsBZ,SAAS,CAACY,QAAV,CAAmBH,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,iCAAcT,SAAS,CAACa,OAAV,IAAqBb,SAAS,CAACa,OAAV,CAAkBC,GAAlB,CAAuBC,GAAD,IAAO;AAAC,iBAAOA,GAAG,CAACC,OAAJ,CAAY,0CAAZ,EAAwD,EAAxD,CAAP;AAAmE,SAAjG,EAAmGC,IAAnG,CAAwG,IAAxG,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,+BAAYjB,SAAS,CAACkB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,yCAAsBC,IAAI,CAACnB,SAAS,CAACoB,OAAX,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7BQtB,S;UACQH,S;;;KADRG,S;AA+BT,eAAeA,SAAf","sourcesContent":["import './character.styles.scss';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Character() {\r\n    let params = useParams();\r\n    const [character, setCharacter] = useState({});\r\n     \r\n    useEffect(()=>{\r\n        const getCharacter = async () => {\r\n            const data = await fetch(`https://rickandmortyapi.com/api/character/${params.id}`);\r\n            const characterData = await data.json();\r\n            setCharacter(characterData);\r\n        }\r\n        getCharacter();\r\n    },[params])\r\n\r\n    \r\n    return(\r\n        <div className=\"character-container\">\r\n            <img src={character.image} alt=\"monster\" />\r\n            <div className='details'>\r\n                <h2>Name: {character.name}</h2>\r\n                <p>Species: {character.species}</p>\r\n                <p>Gender: {character.gender}</p>\r\n                <p>Location: {character.location && character.location.name}</p>\r\n                <p>Episodes: {character.episode && character.episode.map((num)=>{return num.replace('https://rickandmortyapi.com/api/episode/', '')}).join(', ')}</p>\r\n                <p>Status: {character.status}</p>\r\n                <p>Date of creation: {Date(character.created)}</p>\r\n                <p>Like/dislike</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Character;"]},"metadata":{},"sourceType":"module"}